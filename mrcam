#!/usr/bin/python3


r'''mrcam camera preview tool

SYNOPSIS

  $ mrcam

  [ A window pops up showing a live view of the first available camera ]

This tool provides the most basic camera tools: an image preview with some
rudimentary image capture and parameter control

'''


import sys
import argparse
import re
import os

import mrcam

def parse_args():

    parser = \
        argparse.ArgumentParser(description = __doc__,
                                formatter_class=argparse.RawDescriptionHelpFormatter)

    mrcam._add_common_cmd_options(parser,
                                  single_camera = False)

    args = parser.parse_args()

    if len(args.camera) > 1:
        print("ERROR: at this time this tool only supports one camera",
              file = sys.stderr)
        sys.exit(1)

    mrcam._parse_args_postprocess(args)

    return args


args = parse_args()

from fltk import *
from Fl_Gl_Image_Widget import Fl_Gl_Image_Widget
import mrcal



class Fl_Gl_Image_Widget_Derived(Fl_Gl_Image_Widget):
    def handle(self, event):
        if event == FL_MOVE:
            try:
                q = self.map_pixel_image_from_viewport( (Fl.event_x(),Fl.event_y()), )
                status_widget.value(f"{q[0]:.1f},{q[1]:.1f}")
            except:
                status_widget.value("")
            # fall through to let parent handlers run

        return super().handle(event)


W = 800
H = 600
H_STATUS = 20
window        = Fl_Window(W, H, "mrcam stream")
image_widget  = Fl_Gl_Image_Widget_Derived(0,  0, W,H-H_STATUS,
                                           double_buffered = not args.single_buffered
)
status_widget = Fl_Output(0, H-H_STATUS, W, H_STATUS)
window.resizable(image_widget)
window.end()
window.show()


# try block needed to avoid potential crashes:
#   https://sourceforge.net/p/pyfltk/mailman/pyfltk-user/thread/875xx5ncgp.fsf%40secretsauce.net/#msg58754407
try:
    kwargs = dict()
    if args.dims is not None:
        kwargs['width' ] = args.dims[0]
        kwargs['height'] = args.dims[1]
    if args.pixfmt is not None:
        kwargs['pixfmt'] = args.pixfmt
    c = mrcam.camera(args.camera[0],
                     verbose = args.verbose,
                     **kwargs)
except Exception as e:
    window.hide()
    raise e



mrcam._set_up_image_capture(c, window, image_widget, args.period)

Fl.run()
